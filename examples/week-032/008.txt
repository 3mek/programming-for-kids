import random
import pgzrun
import math


def make_new_monster(x, y):
    monster = Actor("monster")
    monster.x = x
    monster.y = y
    return monster


def second(n):
    return (timer % math.floor((n * 60))) == 0


def new_boss_bullet(x, y, where_to_go):
    #      KEY | VALUE
    #      ----+------
    #     image| "bullet"
    #        x | 47
    #        y | 27
    # direction| "right"
    b = Actor("bullet")
    b.x = x
    b.y = y
    b.direction = where_to_go
    return b


elf = Actor("c1")
elf.y = 50
bullet_speed = 1
bull = []
bull.append(new_boss_bullet(-100, -10, "right"))
bull.append(new_boss_bullet(-100, -10, "left"))
bull.append(new_boss_bullet(-100, -10, "up"))
bull.append(new_boss_bullet(-100, -10, "down"))


WIDTH = 800
HEIGHT = 800
game_over = False
monsters_killed = 0

monsters = []
monster_speed_y = 1
for i in range(10):
    m = make_new_monster(i*100, 10)
    monsters.append(m)

boss = Actor("c2")
boss_bullets = []
bossIsAlive = False
bossHP = 100

timer = 1


def move(speed, b):
    if b.direction == "left":
        b.x -= speed
    if b.direction == "right":
        b.x += speed
    if b.direction == "up":
        b.y -= speed
    if b.direction == "down":
        b.y += speed
    if b.direction == "diagonal_right":
        b.y += speed
        b.x += speed


def update_player_bullet():
    global bullet_speed

    if keyboard.SPACE:
        for b in bull:
            b.x = elf.x+25
            b.y = elf.y + 5
        bullet_speed = 1
    if second(0.3):
        bullet_speed *= 1.20
        if bullet_speed > 20:
            bullet_speed = 1
    for b in bull:
        move(bullet_speed, b)


def update_player():
    global game_over
    if keyboard.W:
        elf.y -= 5
    if keyboard.S:
        elf.y += 5
    if keyboard.A:
        elf.x += -5
    if keyboard.D:
        elf.x += 5
    for b in bull:
        if elf.colliderect(b):
            game_over = True


def update_monsters():
    global game_over, monsters_killed, monsters

    for m in list(monsters):
        m.y += monster_speed_y
        if m.y > 795:
            m.y = 10

        if m.colliderect(elf):
            game_over = True
        for b in bull:
            if m.colliderect(b):
                if m in monsters:
                    monsters.remove(m)
                    monsters_killed += 1

    if second(5):
        m = make_new_monster(random.randint(10, 790), -10)
        monsters.append(m)


def reset_game():
    global game_over, timer, monsters
    game_over = False
    monsters = []
    for i in range(10):
        m = make_new_monster(i*100, 10)
        monsters.append(m)
    timer = 1
    elf.y = 500
    elf.x = 500


def update_boss():
    global game_over, bossIsAlive, monsters_killed, bossHP
    if bossIsAlive:
        for b in boss_bullets:
            if b.colliderect(elf):
                game_over = True
            for b in bull:
                if b.colliderect(boss):
                    bossHP -= 15
                    b.x = -100
                    b.y = -100
                    boss.x += random.randint(-10, 10)
                    boss.y += random.randint(-10, 10)
                    if bossHP <= 0:
                        bossIsAlive = False
                        boss.x = -1000
                        boss.y = -1000
                        monsters_killed = 0

        if second(3):
            boss_bullets.append(new_boss_bullet(boss.x, boss.y, "left"))
            boss_bullets.append(new_boss_bullet(boss.x, boss.y, "right"))
            boss_bullets.append(new_boss_bullet(boss.x, boss.y, "up"))
            boss_bullets.append(new_boss_bullet(boss.x, boss.y, "down"))

        boss_bullet_speed = 1
        if bossHP < 20:
            boss_bullet_speed = 5
        for b in boss_bullets:
            move(boss_bullet_speed, b)
    else:
        if monsters_killed > 1:
            boss.x = 400
            boss.y = 350
            bossIsAlive = True


def update():
    global timer
    update_player()
    update_player_bullet()
    update_monsters()
    update_boss()

    timer += 1

    if keyboard.R:
        reset_game()


def draw():
    screen.fill("white")
    elf.draw()
    for b in bull:
        b.draw()

    if bossIsAlive:
        boss.draw()
        for b in boss_bullets:
            b.draw()

    for m in monsters:
        m.draw()


pgzrun.go()
